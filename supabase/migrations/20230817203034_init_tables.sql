create table "public"."fantasy_team" (
    "user_id" uuid not null,
    "season_id" bigint not null,      
    "name" character varying not null,
    "player_ids" bigint[],
    "captain_id" bigint
);


create table "public"."matches" (
    "id" bigint generated by default as identity not null,
    "season_id" bigint not null,
    "team_home_id" bigint not null,
    "team_away_id" bigint not null,
    "goals_player_ids" bigint[],
    "assists_player_ids" bigint[],
    "clutches_player_ids" bigint[]
);


create table "public"."players" (
    "id" bigint generated by default as identity not null,
    "name" character varying not null,
    "image" text
);


create table "public"."players_seasons" (
    "player_id" bigint not null,
    "season_id" bigint not null,
    "attack" integer not null default 50,
    "defence" integer not null default 50,
    "physical" integer not null default 50,
    "morale" integer not null default 50,
    "price" bigint not null default '3000'::bigint
);


create table "public"."seasons" (
    "id" bigint generated by default as identity not null,
    "start_time" timestamp not null,
    "deadline_time" timestamp not null,
    "end_time" timestamp not null,
    "name" character varying not null,
    "starting_currency" bigint
);



create table "public"."teams" (
    "id" bigint generated by default as identity not null,
    "season_id" bigint not null,
    "name" character varying not null,
    "color" character varying,
    "player_ids" bigint[] not null
);


create table "public"."users" (
    "id" uuid not null,
    "is_admin" boolean default false,
    "is_superadmin" boolean default false
);



CREATE UNIQUE INDEX fantasy_team_pkey ON public.fantasy_team USING btree (user_id, season_id);       

CREATE UNIQUE INDEX matches_pkey ON public.matches USING btree (id);

CREATE UNIQUE INDEX players_pkey ON public.players USING btree (id);

CREATE UNIQUE INDEX players_seasons_pkey ON public.players_seasons USING btree (player_id, season_id);

CREATE UNIQUE INDEX seasons_name_key ON public.seasons USING btree (name);

CREATE UNIQUE INDEX seasons_pkey ON public.seasons USING btree (id);

CREATE UNIQUE INDEX teams_pkey ON public.teams USING btree (id);

CREATE UNIQUE INDEX users_pkey ON public.users USING btree (id);

alter table "public"."fantasy_team" add constraint "fantasy_team_pkey" PRIMARY KEY using index "fantasy_team_pkey";

alter table "public"."matches" add constraint "matches_pkey" PRIMARY KEY using index "matches_pkey"; 

alter table "public"."players" add constraint "players_pkey" PRIMARY KEY using index "players_pkey"; 

alter table "public"."players_seasons" add constraint "players_seasons_pkey" PRIMARY KEY using index 
"players_seasons_pkey";

alter table "public"."seasons" add constraint "seasons_pkey" PRIMARY KEY using index "seasons_pkey"; 

alter table "public"."teams" add constraint "teams_pkey" PRIMARY KEY using index "teams_pkey";       

alter table "public"."users" add constraint "users_pkey" PRIMARY KEY using index "users_pkey";       

alter table "public"."fantasy_team" add constraint "fantasy_team_captain_id_fkey" FOREIGN KEY (captain_id) REFERENCES players(id) not valid;

alter table "public"."fantasy_team" validate constraint "fantasy_team_captain_id_fkey";

alter table "public"."fantasy_team" add constraint "fantasy_team_season_id_fkey" FOREIGN KEY (season_id) REFERENCES seasons(id) not valid;

alter table "public"."fantasy_team" validate constraint "fantasy_team_season_id_fkey";

alter table "public"."fantasy_team" add constraint "fantasy_team_user_id_fkey" FOREIGN KEY (user_id) 
REFERENCES users(id) not valid;

alter table "public"."fantasy_team" validate constraint "fantasy_team_user_id_fkey";

alter table "public"."matches" add constraint "matches_season_id_fkey" FOREIGN KEY (season_id) REFERENCES seasons(id) not valid;

alter table "public"."matches" validate constraint "matches_season_id_fkey";

alter table "public"."matches" add constraint "matches_team_away_id_fkey" FOREIGN KEY (team_away_id) 
REFERENCES teams(id) not valid;

alter table "public"."matches" validate constraint "matches_team_away_id_fkey";

alter table "public"."matches" add constraint "matches_team_home_id_fkey" FOREIGN KEY (team_home_id) 
REFERENCES teams(id) not valid;

alter table "public"."matches" validate constraint "matches_team_home_id_fkey";

alter table "public"."players_seasons" add constraint "players_seasons_player_id_fkey" FOREIGN KEY (player_id) REFERENCES players(id) not valid;

alter table "public"."players_seasons" validate constraint "players_seasons_player_id_fkey";

alter table "public"."players_seasons" add constraint "players_seasons_season_id_fkey" FOREIGN KEY (season_id) REFERENCES seasons(id) not valid;

alter table "public"."players_seasons" validate constraint "players_seasons_season_id_fkey";

alter table "public"."seasons" add constraint "seasons_name_key" UNIQUE using index "seasons_name_key";

alter table "public"."teams" add constraint "teams_season_id_fkey" FOREIGN KEY (season_id) REFERENCES seasons(id) not valid;

alter table "public"."teams" validate constraint "teams_season_id_fkey";

alter table "public"."users" add constraint "users_id_fkey" FOREIGN KEY (id) REFERENCES auth.users(id) not valid;

alter table "public"."users" validate constraint "users_id_fkey";


-- inserts a row into public.users
create function public.handle_new_user()
returns trigger
language plpgsql
security definer set search_path = public
as $$
begin
  insert into public.users (id)
  values (new.id);
  return new;
end;
$$;

-- trigger the function every time a user is created
create trigger on_auth_user_created
  after insert on auth.users
  for each row execute procedure public.handle_new_user()